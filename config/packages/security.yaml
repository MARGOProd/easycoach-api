security:
    # enable_authenticator_manager: true
    encoders:
        App\Entity\User:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        apidoc:
            pattern: ^/api/docs
            security: false
        login:
            pattern: ^/api/login
            stateless: true
            anonymous: true
            provider: app_user_provider
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            anonymous: true
            pattern: ^/api/
            stateless: true
            provider: app_user_provider
            guard:
                entry_point: App\Security\DeviceAuthenticator
                authenticators:
                    - App\Security\DeviceAuthenticator
                    - App\Security\UserAuthenticator
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: true
            lazy: true
            provider: users_in_memory

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
            # - { path: ^/api/mailer/reset_password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
            # - { path: ^/api/account/demo, roles: IS_AUTHENTICATED_ANONYMOUSLY }
            # - { path: ^/api/payments, roles: IS_AUTHENTICATED_ANONYMOUSLY }
            # - { path: ^/api/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/account/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: ROLE_USER }
    role_hierarchy:
            ROLE_ADMIN:         ROLE_USER
            ROLE_SUPER_ADMIN:   ROLE_ADMIN
